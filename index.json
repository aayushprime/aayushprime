[{"content":"Welcome to another one of my interesting findings, where I explore some stuff for fun and profit just fun\nA while back I was solving AOC and for a problem (day 13), I had this sort of clever idea of using eval to skip writing a if else ladder. The input file had the following structure\nStarting items: 91, 65 Operation: new = old * 13 Test: divisible by 5 If true: throw to monkey 7 If false: throw to monkey 4 I had to parse the file to get all values, but when parsing the second line I thought why not use the python interpretor itself. And so, I created a variable called old and whenever it needed updating I would use the following line\nold = eval( \u0026#34;line 2 after the equal part\u0026#34; ) The clever part was that I was skipping having to translate whatever symbol was present in the input (one of +, - , / or *) This was fine for the test input, but it became slow when I ran it against the larger input.\nI ran python -m cProfile main.py to find out that it was eval that took a bunch of time. It was being invoked a lot of time because it was called in the update loop.\nSo, I thought,\nwhy not store the function into a lambda before hand and then just call the lambda instead of calling eval? And that\u0026rsquo;s exactly what I did, and it worked. The unoptimized program took about 6 seconds when running on the complete input. But after I stored the operation in a lambda, it was basically instant. So, here is the main \u0026ldquo;trick\u0026rdquo;\noperation = eval(\u0026#34;lambda old: \u0026#34; + lines[2].split(\u0026#34;=\u0026#34;)[1].strip()) Notice the parameter name of the lambda \u0026ldquo;old\u0026rdquo; it is necessary because the string is \u0026ldquo;old\u0026rdquo; in the input.\nSo, why is running eval repeatedly slow?\nEval is used for evaluating dynamic expressions, but we already have a fixed expression, so eval is doing extra work trying to evaluate the same expression many times, if we compile the expression to a lambda, we can just execute a lambda and it is a lot faster.\n","permalink":"https://lamichhaneaayush.com.np/posts/solveeval/","summary":"\u003cp\u003eWelcome to another one of my interesting findings, where I explore some stuff for fun \u003cdel\u003eand profit\u003c/del\u003e \u003cstrong\u003ejust fun\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eA while back I was solving \u003ca href=\"https://adventofcode.com/\"\u003eAOC\u003c/a\u003e and for a problem (day 13), I had this sort of clever idea of using eval to skip writing a \u003ccode\u003eif else\u003c/code\u003e  ladder.\nThe input file had the following structure\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-Monkey\" data-lang=\"Monkey\"\u003e  Starting items: 91, 65\n  Operation: new = old * 13\n  Test: divisible by 5\n    If true: throw to monkey 7\n    If false: throw to monkey 4\n\u003c/code\u003e\u003c/pr","title":"Python: Solving slow eval"},{"content":"Today I tried to write an fstab entry so that my drive would automount on boot.\nIt went as smoothly as I had hoped (at first).\nSo, I ran sudo blkid to find the UUID of the drive I wanted to mount and added the entry UUID=288C1E6C8C1E3532 /hdrive auto defaults 0 0 following the steps in this wonderful article. (Some options are different after I realized what I wanted.)\nArticle\nThen I ran sudo mount -a to check if the mounts were working properly. But here the problem began. The drive was mounted as readonly. There is no mention of readonly mount in the options.\nIn fact I learnt that defaults option is shorthand for rw (read write) and bunch of other options. Then I tried various mount options and got sick of rebooting. I tried directly mounting as ntfs instead of auto. But it didn\u0026rsquo;t work.\nAfter lot of struggle I figured out the problem. It was because of my Windows Installation!\nI have dual boot setup. And turns out windows stores some files for faster booting (fast boot) in the harddisk thus linux cannot mount the drive cleanly and can only mount it as a read only drive. So to fix this I had to boot to windows and change the fast boot setting. Here\u0026rsquo;s how,\nGo to control panel Power options Choose what the power buttons do Turn off fastboot\nAnd after that the same fstab entry worked. Here\u0026rsquo;s the SO entry where I found the fix: SO ","permalink":"https://lamichhaneaayush.com.np/posts/fstab-problem/","summary":"\u003cp\u003eToday I tried to write an \u003ccode\u003efstab\u003c/code\u003e entry so that my drive would automount on boot.\u003cbr\u003e\nIt went as smoothly as I had hoped (at first).\u003cbr\u003e\nSo, I ran \u003ccode\u003esudo blkid\u003c/code\u003e to find the UUID of the drive I wanted to mount and added the entry \u003ccode\u003eUUID=288C1E6C8C1E3532 /hdrive auto defaults 0 0\u003c/code\u003e following the steps  in this wonderful article. (Some options are different after I realized what I wanted.)\u003cbr\u003e\n\u003ca href=\"https://www.techrepublic.com/article/how-to-properly-automount-a-drive-in-ubuntu-linux/\"\u003eArticle\u003c/a\u003e\u003cbr\u003e\nThen I ran \u003ccode\u003esudo mount -a\u003c/code\u003e to check if the mounts were working properly. But here the problem began. The drive was mounted as readonly. There is no mention of readonly mount in the options.\u003cbr\u003e\nIn fact I learnt that \u003ccode\u003edefaults\u003c/code\u003e option is shorthand for \u003ccode\u003erw\u003c/code\u003e (read write) and bunch of other options.\nThen I tried various mount options and got sick of rebooting. I tried directly mounting as \u003ccode\u003entfs\u003c/code\u003e instead of \u003ccode\u003eauto\u003c/code\u003e. But it didn\u0026rsquo;t work.\u003cbr\u003e\nAfter lot of struggle I figured out the problem. It was because of my Windows Installation!\u003cbr\u003e\nI have dual boot setup. And turns out windows stores some files for faster booting (fast boot) in the harddisk thus linux cannot mount the drive cleanly and can only mount it as a read only drive. So to fix this I had to boot to windows and change the fast boot setting. Here\u0026rsquo;s how,\u003c/p\u003e","title":"Why does my drive mount as read only?"},{"content":"I recently learned that Google Sheets can be used as a database (although with caveats I hear). And I love it.\nIt is so much easier to see what is in the spreadsheet than on a sqlite file.\nPlus, google sheets works everywhere!\nSo, to get started, the official way to do this is from the google developers website.\nhttps://developers.google.com/sheets/api/guides/concepts\nIt is not so easy to understand for a beginner(which I am). So, upon further looking around I came across this wonderful python library that makes things so much easier. It\u0026rsquo;s gspread.\nHow to get started (quickly) Go to Google Cloud Console (login of course) Create a new project if you haven\u0026rsquo;t already Go to API dashboard Then click enable APIs and Services Search for google drive and enable in Then click manage to go to this page Click credentials \u0026gt; create credentials \u0026gt; service account Enter a name and URL and click continue Select the Editor role Continue and Done! Then click on the service account you just created Keys \u0026gt; Create New Key \u0026gt; Select JSON A file should download You can either add the email to your own google sheets via Share\u0026gt; Invite people and paste this email or create your own spreadsheet. Python code Now the code side of things, first of all, install 2 python packages, gspread and oauth2client\npip install gspread oauth2client should do the trick.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 import gspread from oauth2client.service_account import ServiceAccountCredentials scope = [ \u0026#34;https://spreadsheets.google.com/feeds\u0026#34;, \u0026#34;https://www.googleapis.com/auth/spreadsheets\u0026#34;, \u0026#34;https://www.googleapis.com/auth/drive.file\u0026#34;, \u0026#34;https://www.googleapis.com/auth/drive\u0026#34;, ] # credentials.json is the file you downloaded from google console # (rename appropriately) creds = ServiceAccountCredentials.from_json_keyfile_name(\u0026#34;credentials.json\u0026#34;, scope) client = gspread.authorize(creds) # the name of your spreadsheet in google sheets dbname = \u0026#34;googlesheetsname\u0026#34; sheet = client.open(dbname).sheet1 data = sheet.get_all_records() row = sheet.row_values(1) col = sheet.col_values(2) Using the library is very easy. See gspread docs for more details\nhttps://docs.gspread.org/en/latest/\n","permalink":"https://lamichhaneaayush.com.np/posts/google-sheets/","summary":"\u003cp\u003eI recently learned that Google Sheets can be used as a database (although with caveats I hear). And I love it.\u003cbr\u003e\nIt is so much \u003cstrong\u003eeasier\u003c/strong\u003e to see what is in the spreadsheet than on a sqlite file.\u003cbr\u003e\nPlus, google sheets works everywhere!\u003cbr\u003e\nSo, to get started, the official way to do this is from the google developers website.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"https://developers.google.com/sheets/api/guides/concepts\"\u003ehttps://developers.google.com/sheets/api/guides/concepts\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eIt is not so easy to understand for a beginner(which I am).\nSo, upon further looking around I came across this wonderful python library that makes things so much easier.\nIt\u0026rsquo;s \u003ccode\u003egspread\u003c/code\u003e.\u003c/p\u003e","title":"Google Sheets as Database?"},{"content":"Hi, I\u0026rsquo;m AayushðŸ‘‹ I\u0026rsquo;m a Computer Engineering student at Pulchowk.\nPassionate about: Python, Opensource, AI, Blockchain, Graphics\nMajor Interests Programming Blockchain AI/ML ","permalink":"https://lamichhaneaayush.com.np/about/","summary":"\u003ch2 id=\"hi-im-aayush\"\u003eHi, I\u0026rsquo;m AayushðŸ‘‹\u003c/h2\u003e\n\u003cp\u003eI\u0026rsquo;m a Computer Engineering student at Pulchowk.\u003cbr\u003e\nPassionate about: Python, Opensource, AI, Blockchain, Graphics\u003c/p\u003e\n\u003ch2 id=\"major-interests\"\u003eMajor Interests\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eProgramming\u003c/li\u003e\n\u003cli\u003eBlockchain\u003c/li\u003e\n\u003cli\u003eAI/ML\u003c/li\u003e\n\u003c/ul\u003e","title":"About"},{"content":"Today the coding calendar Advent of Code started.\nYou should try it too, Advent of Code.\nI tried to solve the first challenge. It was pretty straight forward. Except, I was stumped by a simple problem.\nHere is my first attempt,\n1 2 3 4 5 6 7 8 9 10 11 12 def part1(lines): prev = lines[0] more = 0 for i in range(len(lines) - 1): if lines[i+1] \u0026gt; prev: more += 1 prev = lines[i+1] print(more) if __name__ ==\u0026#39;__main__\u0026#39;: with open(\u0026#39;./input/day1.txt\u0026#39;, \u0026#39;r\u0026#39;) as f: lines = [a.strip() for a in f.readlines()] part1(lines) The thing is it gives correct result for the test data. So, I assumed it would work for the input data. But, the program always gave me 1 less than the actual answer. I couldn\u0026rsquo;t figure out why.\nNotice, I use string comparison in the if condition on line 5. I knew using string for comparison of numbers was a bad idea but, the following IDLE experiments convinced me otherwise.\n1 2 3 4 \u0026gt;\u0026gt;\u0026gt; \u0026#34;123\u0026#34; \u0026gt; \u0026#34;456\u0026#34; False \u0026gt;\u0026gt;\u0026gt; \u0026#34;456\u0026#34; \u0026gt; \u0026#34;123\u0026#34; True If you didn\u0026rsquo;t know (I certainly didn\u0026rsquo;t) you can compare strings with the \u0026gt; and \u0026lt; operators in python. This led me to believe that comparing numbers would work without explicitly using integers.\n1 2 \u0026gt;\u0026gt;\u0026gt; \u0026#34;1024\u0026#34;\u0026gt;\u0026#34;946\u0026#34; False Here is the problem. String comparison compares the first character of the strings and the tries to distinguish which is larger. Here, even though 1024 is greater than 946, 9 is greater than 1! The string comparison operator doesn\u0026rsquo;t know better. I could\u0026rsquo;ve casted them to integers or zfilled them to have same number of digits to solve the problem.\nAnd I did, the program now works!\n1 2 3 4 if __name__ ==\u0026#39;__main__\u0026#39;: with open(\u0026#39;./input/day1.txt\u0026#39;, \u0026#39;r\u0026#39;) as f: lines = [int(a.strip()) for a in f.readlines()] part1(lines) So, the takeaway is, use numbers(the datatype) when dealing with numbers.\n","permalink":"https://lamichhaneaayush.com.np/posts/string-bug/","summary":"\u003cp\u003eToday the coding calendar Advent of Code started.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eYou should try it too, \u003ca href=\"https://adventofcode.com\"\u003eAdvent of Code\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eI tried to solve the first challenge. It was pretty straight forward.\nExcept, I was stumped by a simple problem.\u003cbr\u003e\nHere is my first attempt,\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\n\u003ctable style=\"border-spacing:0;padding:0;margin:0;border:0;\"\u003e\u003ctr\u003e\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 1\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 2\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 3\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 4\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 5\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 6\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 7\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 8\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e 9\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e10\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e11\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e12\n\u003c/span\u003e\u003c/code\u003e\u003c/pr","title":"String Bug"},{"content":"Welcome! This is the first post of my blog!\nWhat is this about? In an attempt to make myself \u0026ldquo;productive\u0026rdquo;, I try to write about anything I find interesting.\nTell me something interesting at lamichhaneaayush5@gmail.com\n","permalink":"https://lamichhaneaayush.com.np/posts/first/","summary":"\u003ch2 id=\"welcome\"\u003eWelcome!\u003c/h2\u003e\n\u003cp\u003eThis is the first post of my blog!\u003c/p\u003e\n\u003ch2 id=\"what-is-this-about\"\u003eWhat is this about?\u003c/h2\u003e\n\u003cp\u003eIn an attempt to make myself \u0026ldquo;productive\u0026rdquo;, I try to write about anything I find interesting.\u003c/p\u003e\n\u003cp\u003eTell me something interesting at \u003ca href=\"mailto:lamichhaneaayush5@gmail.com\"\u003elamichhaneaayush5@gmail.com\u003c/a\u003e\u003c/p\u003e","title":"First"}]