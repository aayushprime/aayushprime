[{"content":"Today I tried to write an fstab entry so that my drive would automount on boot.\nIt went as smoothly as I had hoped (at first).\nSo, I ran sudo blkid to find the UUID of the drive I wanted to mount and added the entry UUID=288C1E6C8C1E3532 /hdrive auto defaults 0 0 following the steps in this wonderful article. (Some options are different after I realized what I wanted.)\nArticle\nThen I ran sudo mount -a to check if the mounts were working properly. But here the problem began. The drive was mounted as readonly. There is no mention of readonly mount in the options.\nIn fact I learnt that defaults option is shorthand for rw (read write) and bunch of other options. Then I tried various mount options and got sick of rebooting. I tried directly mounting as ntfs instead of auto. But it didn\u0026rsquo;t work.\nAfter lot of struggle I figured out the problem. It was because of my Windows Installation!\nI have dual boot setup. And turns out windows stores some files for faster booting (fast boot) in the harddisk thus linux cannot mount the drive cleanly and can only mount it as a read only drive. So to fix this I had to boot to windows and change the fast boot setting. Here\u0026rsquo;s how,\n Go to control panel Power options Choose what the power buttons do Turn off fastboot\nAnd after that the same fstab entry worked. Here\u0026rsquo;s the SO entry where I found the fix: SO  ","permalink":"https://lamichhaneaayush.com.np/posts/fstab-problem/","summary":"Today I tried to write an fstab entry so that my drive would automount on boot.\nIt went as smoothly as I had hoped (at first).\nSo, I ran sudo blkid to find the UUID of the drive I wanted to mount and added the entry UUID=288C1E6C8C1E3532 /hdrive auto defaults 0 0 following the steps in this wonderful article. (Some options are different after I realized what I wanted.)\nArticle","title":"Why does my drive mount as read only?"},{"content":"I recently learned that Google Sheets can be used as a database (although with caveats I hear). And I love it.\nIt is so much easier to see what is in the spreadsheet than on a sqlite file.\nPlus, google sheets works everywhere!\nSo, to get started, the official way to do this is from the google developers website.\n https://developers.google.com/sheets/api/guides/concepts\n It is not so easy to understand for a beginner(which I am). So, upon further looking around I came across this wonderful python library that makes things so much easier. It\u0026rsquo;s gspread.\nHow to get started (quickly)  Go to Google Cloud Console (login of course) Create a new project if you haven\u0026rsquo;t already Go to API dashboard  Then click enable APIs and Services Search for google drive and enable in Then click manage to go to this page  Click credentials \u0026gt; create credentials \u0026gt; service account Enter a name and URL and click continue Select the Editor role  Continue and Done! Then click on the service account you just created Keys \u0026gt; Create New Key \u0026gt; Select JSON  A file should download  You can either add the email to your own google sheets via Share\u0026gt; Invite people and paste this email or create your own spreadsheet. Python code Now the code side of things, first of all, install 2 python packages, gspread and oauth2client\npip install gspread oauth2client should do the trick.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  import gspread from oauth2client.service_account import ServiceAccountCredentials scope = [ \u0026#34;https://spreadsheets.google.com/feeds\u0026#34;, \u0026#34;https://www.googleapis.com/auth/spreadsheets\u0026#34;, \u0026#34;https://www.googleapis.com/auth/drive.file\u0026#34;, \u0026#34;https://www.googleapis.com/auth/drive\u0026#34;, ] # credentials.json is the file you downloaded from google console # (rename appropriately) creds = ServiceAccountCredentials.from_json_keyfile_name(\u0026#34;credentials.json\u0026#34;, scope) client = gspread.authorize(creds) # the name of your spreadsheet in google sheets dbname = \u0026#34;googlesheetsname\u0026#34; sheet = client.open(dbname).sheet1 data = sheet.get_all_records() row = sheet.row_values(1) col = sheet.col_values(2)   Using the library is very easy. See gspread docs for more details\n https://docs.gspread.org/en/latest/\n ","permalink":"https://lamichhaneaayush.com.np/posts/google-sheets/","summary":"I recently learned that Google Sheets can be used as a database (although with caveats I hear). And I love it.\nIt is so much easier to see what is in the spreadsheet than on a sqlite file.\nPlus, google sheets works everywhere!\nSo, to get started, the official way to do this is from the google developers website.\n https://developers.google.com/sheets/api/guides/concepts\n It is not so easy to understand for a beginner(which I am).","title":"Google Sheets as Database?"},{"content":"Hi, I\u0026rsquo;m AayushðŸ‘‹ I\u0026rsquo;m a Computer Engineering student at Pulchowk.\nPassionate about: Opensource, AI, Blockchain, Graphics\nMajor Interests  Programming Blockchain AI/ML  ","permalink":"https://lamichhaneaayush.com.np/about/","summary":"Hi, I\u0026rsquo;m AayushðŸ‘‹ I\u0026rsquo;m a Computer Engineering student at Pulchowk.\nPassionate about: Opensource, AI, Blockchain, Graphics\nMajor Interests  Programming Blockchain AI/ML  ","title":"About"},{"content":"Today the coding calendar Advent of Code started.\n You should try it too, Advent of Code.\n I tried to solve the first challenge. It was pretty straight forward. Except, I was stumped by a simple problem.\nHere is my first attempt,\n1 2 3 4 5 6 7 8 9 10 11 12  def part1(lines): prev = lines[0] more = 0 for i in range(len(lines) - 1): if lines[i+1] \u0026gt; prev: more += 1 prev = lines[i+1] print(more) if __name__ ==\u0026#39;__main__\u0026#39;: with open(\u0026#39;./input/day1.txt\u0026#39;, \u0026#39;r\u0026#39;) as f: lines = [a.strip() for a in f.readlines()] part1(lines)   The thing is it gives correct result for the test data. So, I assumed it would work for the input data. But, the program always gave me 1 less than the actual answer. I couldn\u0026rsquo;t figure out why.\nNotice, I use string comparison in the if condition on line 5. I knew using string for comparison of numbers was a bad idea but, the following IDLE experiments convinced me otherwise.\n1 2 3 4  \u0026gt;\u0026gt;\u0026gt; \u0026#34;123\u0026#34; \u0026gt; \u0026#34;456\u0026#34; False \u0026gt;\u0026gt;\u0026gt; \u0026#34;456\u0026#34; \u0026gt; \u0026#34;123\u0026#34; True   If you didn\u0026rsquo;t know (I certainly didn\u0026rsquo;t) you can compare strings with the \u0026gt; and \u0026lt; operators in python. This led me to believe that comparing numbers would work without explicitly using integers.\n1 2  \u0026gt;\u0026gt;\u0026gt; \u0026#34;1024\u0026#34;\u0026gt;\u0026#34;946\u0026#34; False   Here is the problem. String comparison compares the first character of the strings and the tries to distinguish which is larger. Here, even though 1024 is greater than 946, 9 is greater than 1! The string comparison operator doesn\u0026rsquo;t know better. I could\u0026rsquo;ve casted them to integers or zfilled them to have same number of digits to solve the problem.\nAnd I did, the program now works!\n1 2 3 4  if __name__ ==\u0026#39;__main__\u0026#39;: with open(\u0026#39;./input/day1.txt\u0026#39;, \u0026#39;r\u0026#39;) as f: lines = [int(a.strip()) for a in f.readlines()] part1(lines)   So, the takeaway is, use numbers(the datatype) when dealing with numbers.\n","permalink":"https://lamichhaneaayush.com.np/posts/string-bug/","summary":"Today the coding calendar Advent of Code started.\n You should try it too, Advent of Code.\n I tried to solve the first challenge. It was pretty straight forward. Except, I was stumped by a simple problem.\nHere is my first attempt,\n1 2 3 4 5 6 7 8 9 10 11 12  def part1(lines): prev = lines[0] more = 0 for i in range(len(lines) - 1): if lines[i+1] \u0026gt; prev: more += 1 prev = lines[i+1] print(more) if __name__ ==\u0026#39;__main__\u0026#39;: with open(\u0026#39;.","title":"String Bug"},{"content":"Welcome! This is the first post of my blog!\nWhat is this about? In an attempt to make myself \u0026ldquo;productive\u0026rdquo;, I try to write about anything I find interesting.\nTell me something interesting at lamichhaneaayush5@gmail.com\n","permalink":"https://lamichhaneaayush.com.np/posts/first/","summary":"Welcome! This is the first post of my blog!\nWhat is this about? In an attempt to make myself \u0026ldquo;productive\u0026rdquo;, I try to write about anything I find interesting.\nTell me something interesting at lamichhaneaayush5@gmail.com","title":"First"}]